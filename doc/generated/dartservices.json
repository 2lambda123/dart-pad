{
 "kind": "discovery#restDescription",
 "etag": "a82c90329571bcd394386053e89fd6e6b0ca7bfc",
 "discoveryVersion": "v1",
 "id": "dartservices:v1",
 "name": "dartservices",
 "version": "v1",
 "revision": "0",
 "protocol": "rest",
 "baseUrl": "/api/dartservices/v1/",
 "basePath": "/api/dartservices/v1/",
 "rootUrl": "/",
 "servicePath": "api/dartservices/v1/",
 "parameters": {},
 "schemas": {
  "CounterResponse": {
   "id": "CounterResponse",
   "type": "object",
   "properties": {
    "count": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "SourceRequest": {
   "id": "SourceRequest",
   "type": "object",
   "properties": {
    "source": {
     "type": "string",
     "description": "The Dart source.",
     "required": true
    },
    "offset": {
     "type": "integer",
     "description": "An optional offset into the source code.",
     "format": "int32"
    }
   }
  },
  "AnalysisResults": {
   "id": "AnalysisResults",
   "type": "object",
   "properties": {
    "issues": {
     "type": "array",
     "items": {
      "$ref": "AnalysisIssue"
     }
    }
   }
  },
  "AnalysisIssue": {
   "id": "AnalysisIssue",
   "type": "object",
   "properties": {
    "kind": {
     "type": "string"
    },
    "line": {
     "type": "integer",
     "format": "int32"
    },
    "message": {
     "type": "string"
    },
    "hasFixes": {
     "type": "boolean"
    },
    "charStart": {
     "type": "integer",
     "format": "int32"
    },
    "charLength": {
     "type": "integer",
     "format": "int32"
    },
    "location": {
     "type": "string"
    }
   }
  },
  "CompileRequest": {
   "id": "CompileRequest",
   "type": "object",
   "properties": {
    "source": {
     "type": "string",
     "description": "The Dart source.",
     "required": true
    },
    "useCheckedMode": {
     "type": "boolean",
     "description": "Compile to code with checked mode checks; optional (defaults to false)."
    },
    "returnSourceMap": {
     "type": "boolean",
     "description": "Return the Dart to JS source map; optional (defaults to false)."
    }
   }
  },
  "CompileResponse": {
   "id": "CompileResponse",
   "type": "object",
   "properties": {
    "result": {
     "type": "string"
    },
    "sourceMap": {
     "type": "string"
    }
   }
  },
  "CompleteResponse": {
   "id": "CompleteResponse",
   "type": "object",
   "properties": {
    "replacementOffset": {
     "type": "integer",
     "description": "The offset of the start of the text to be replaced.",
     "format": "int32"
    },
    "replacementLength": {
     "type": "integer",
     "description": "The length of the text to be replaced.",
     "format": "int32"
    },
    "completions": {
     "type": "array",
     "items": {
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   }
  },
  "FixesResponse": {
   "id": "FixesResponse",
   "type": "object",
   "properties": {
    "fixes": {
     "type": "array",
     "items": {
      "$ref": "ProblemAndFixes"
     }
    }
   }
  },
  "ProblemAndFixes": {
   "id": "ProblemAndFixes",
   "type": "object",
   "properties": {
    "fixes": {
     "type": "array",
     "items": {
      "$ref": "CandidateFix"
     }
    },
    "problemMessage": {
     "type": "string"
    },
    "offset": {
     "type": "integer",
     "format": "int32"
    },
    "length": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "CandidateFix": {
   "id": "CandidateFix",
   "type": "object",
   "properties": {
    "message": {
     "type": "string"
    },
    "edits": {
     "type": "array",
     "items": {
      "$ref": "SourceEdit"
     }
    }
   }
  },
  "SourceEdit": {
   "id": "SourceEdit",
   "type": "object",
   "properties": {
    "offset": {
     "type": "integer",
     "format": "int32"
    },
    "length": {
     "type": "integer",
     "format": "int32"
    },
    "replacement": {
     "type": "string"
    }
   }
  },
  "FormatResponse": {
   "id": "FormatResponse",
   "type": "object",
   "properties": {
    "newString": {
     "type": "string",
     "description": "The formatted source code."
    },
    "offset": {
     "type": "integer",
     "description": "The (optional) new offset of the cursor; can be `null`.",
     "format": "int32"
    }
   }
  },
  "DocumentResponse": {
   "id": "DocumentResponse",
   "type": "object",
   "properties": {
    "info": {
     "type": "object",
     "additionalProperties": {
      "type": "string"
     }
    }
   }
  }
 },
 "methods": {
  "counterGet": {
   "id": "CommonServer.counterGet",
   "path": "counter",
   "httpMethod": "GET",
   "parameters": {
    "name": {
     "type": "string",
     "description": "Query parameter: 'name'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [],
   "response": {
    "$ref": "CounterResponse"
   }
  },
  "analyze": {
   "id": "CommonServer.analyze",
   "path": "analyze",
   "httpMethod": "POST",
   "description": "Analyze the given Dart source code and return any resulting analysis errors or warnings.",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "SourceRequest"
   },
   "response": {
    "$ref": "AnalysisResults"
   }
  },
  "analyzeGet": {
   "id": "CommonServer.analyzeGet",
   "path": "analyze",
   "httpMethod": "GET",
   "parameters": {
    "source": {
     "type": "string",
     "description": "Query parameter: 'source'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [],
   "response": {
    "$ref": "AnalysisResults"
   }
  },
  "compile": {
   "id": "CommonServer.compile",
   "path": "compile",
   "httpMethod": "POST",
   "description": "Compile the given Dart source code and return the resulting JavaScript.",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "CompileRequest"
   },
   "response": {
    "$ref": "CompileResponse"
   }
  },
  "compileGet": {
   "id": "CommonServer.compileGet",
   "path": "compile",
   "httpMethod": "GET",
   "parameters": {
    "source": {
     "type": "string",
     "description": "Query parameter: 'source'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [],
   "response": {
    "$ref": "CompileResponse"
   }
  },
  "complete": {
   "id": "CommonServer.complete",
   "path": "complete",
   "httpMethod": "POST",
   "description": "Get the valid code completion results for the given offset.",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "SourceRequest"
   },
   "response": {
    "$ref": "CompleteResponse"
   }
  },
  "completeGet": {
   "id": "CommonServer.completeGet",
   "path": "complete",
   "httpMethod": "GET",
   "parameters": {
    "source": {
     "type": "string",
     "description": "Query parameter: 'source'.",
     "required": false,
     "location": "query"
    },
    "offset": {
     "type": "integer",
     "description": "Query parameter: 'offset'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [],
   "response": {
    "$ref": "CompleteResponse"
   }
  },
  "fixes": {
   "id": "CommonServer.fixes",
   "path": "fixes",
   "httpMethod": "POST",
   "description": "Get any quick fixes for the given source code location.",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "SourceRequest"
   },
   "response": {
    "$ref": "FixesResponse"
   }
  },
  "fixesGet": {
   "id": "CommonServer.fixesGet",
   "path": "fixes",
   "httpMethod": "GET",
   "parameters": {
    "source": {
     "type": "string",
     "description": "Query parameter: 'source'.",
     "required": false,
     "location": "query"
    },
    "offset": {
     "type": "integer",
     "description": "Query parameter: 'offset'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [],
   "response": {
    "$ref": "FixesResponse"
   }
  },
  "format": {
   "id": "CommonServer.format",
   "path": "format",
   "httpMethod": "POST",
   "description": "Format the given Dart source code and return the results. If an offset is supplied in the request, the new position for that offset in the formatted code will be returned.",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "SourceRequest"
   },
   "response": {
    "$ref": "FormatResponse"
   }
  },
  "formatGet": {
   "id": "CommonServer.formatGet",
   "path": "format",
   "httpMethod": "GET",
   "parameters": {
    "source": {
     "type": "string",
     "description": "Query parameter: 'source'.",
     "required": false,
     "location": "query"
    },
    "offset": {
     "type": "integer",
     "description": "Query parameter: 'offset'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [],
   "response": {
    "$ref": "FormatResponse"
   }
  },
  "document": {
   "id": "CommonServer.document",
   "path": "document",
   "httpMethod": "POST",
   "description": "Return the relevant dartdoc information for the element at the given offset.",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "SourceRequest"
   },
   "response": {
    "$ref": "DocumentResponse"
   }
  },
  "documentGet": {
   "id": "CommonServer.documentGet",
   "path": "document",
   "httpMethod": "GET",
   "parameters": {
    "source": {
     "type": "string",
     "description": "Query parameter: 'source'.",
     "required": false,
     "location": "query"
    },
    "offset": {
     "type": "integer",
     "description": "Query parameter: 'offset'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [],
   "response": {
    "$ref": "DocumentResponse"
   }
  }
 },
 "resources": {}
}
